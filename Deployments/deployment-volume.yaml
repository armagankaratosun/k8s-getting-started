apiVersion: v1
kind: Service
metadata:
  name: k8s-getting-started-volume-service
spec:
  type: ClusterIP                       # Internal-only access within the cluster
  selector:
    app: k8s-getting-started-volume      # Matches the label of the Deployment
  ports:
    - protocol: TCP
      port: 8080                           # Port exposed by the service
      targetPort: 8080                   # Port on the container that the app is running on
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: k8s-getting-started-volume-pvc
spec:
  accessModes:
    - ReadWriteOnce                      # The volume can be mounted as read-write by a single node
  resources:
    requests:
      storage: 1Gi                       # Requests 1Gi of storage
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-getting-started-volume
  labels:
    app: k8s-getting-started-volume
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k8s-getting-started-volume
  template:
    metadata:
      labels:
        app: k8s-getting-started-volume
    spec:
      containers:
        - name: k8s-getting-started-volume
          image: armagankaratosun/k8s-getting-started:v3  # Updated to v3
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: app-storage               # Attach the PVC as a volume in the container
              mountPath: /data                # Path inside the container where the volume is mounted
      volumes:
        - name: app-storage
          persistentVolumeClaim:
            claimName: k8s-getting-started-volume-pvc  # Reference the PVC created above
