apiVersion: v1
kind: Service
metadata:
  name: k8s-getting-started-with-probes-service
spec:
  type: ClusterIP                       # Internal-only access within the cluster
  selector:
    app: k8s-getting-started-with-probes     # Matches the label of the Deployment
  ports:
    - protocol: TCP
      port: 8080                           # Port exposed by the service
      targetPort: 8080                   # Port on the container that the app is running on
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-getting-started-with-probes
  labels:
    app: k8s-getting-started-with-probes
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      app: k8s-getting-started-with-probes
  template:
    metadata:
      labels:
        app: k8s-getting-started-with-probes
    spec:
      containers:
        - name: k8s-getting-started-with-probes
          image: armagankaratosun/k8s-getting-started:v4
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          livenessProbe:
            httpGet:
              path: /   
              port: 8080
            successThreshold: 1 
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /healthz   # Readiness check on the /healthz endpoint
              port: 8080
            successThreshold: 1 
            failureThreshold: 3
